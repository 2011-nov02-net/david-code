DROP TABLE IF EXISTS Company.Product;
CREATE TABLE Company.Product (
	Id INT NOT NULL IDENTITY,
	Name NVARCHAR(150) NOT NULL,
	Price MONEY NOT NULL CHECK (Price > 0),
	CONSTRAINT PK_Product PRIMARY KEY (Id)
);

DROP TABLE IF EXISTS Company.Customer;
CREATE TABLE Company.Customer (
	Id INT NOT NULL IDENTITY,
	FirstName NVARCHAR(150) NOT NULL,
	LastName NVARCHAR(150) NOT NULL,
	CardNumber NVARCHAR(16) NULL CHECK (Len(CardNumber) = 16),
	CONSTRAINT PK_Customer PRIMARY KEY (Id)
);

DROP TABLE IF EXISTS Company.Orders;
CREATE TABLE Company.Orders (
	Id INT NOT NULL IDENTITY,
	ProductId INT NOT NULL,
	CustomerId INT NOT NULL,
	PricePurchased MONEY NOT NULL,
	CONSTRAINT FK_OrderProductId_ProductId FOREIGN KEY (ProductId) REFERENCES Company.Product(Id),
	CONSTRAINT FK_OrderCustomerId_CustomerId FOREIGN KEY (CustomerId) REFERENCES Company.Customer(Id)
);

SELECT *
FROM Company.Product;
SELECT *
FROM Company.Customer;
SELECT *
FROM Company.Orders;

-- Insert 3 records into each table.

INSERT INTO Company.Product (Name, Price) VALUES ('Paper Towels', 15.99),('Calculator', 149.99),('Blender', 250.99);

INSERT INTO Company.Customer(FirstName, LastName, CardNumber) VALUES
	('David', 'Barnes', '1111222233334444'),
	('John', 'Smith', '4444555566667777'),
	('Jane', 'Doe', '6666777788889999');

INSERT INTO Company.Orders (ProductId, CustomerId, PricePurchased) VALUES (1,1, 15.99), (1,2, 15.99), (3,3, 250.99);

-- Add product Iphone priced at $200

INSERT INTO Company.Product (Name, Price) VALUES ('iPhone', 200.00);

-- Add customer Tina Smith

INSERT INTO Company.Customer (FirstName, LastName) VALUES ('Tina', 'Smith');

-- Create order for Tina Smith bought an iPhone

INSERT INTO Company.Orders (ProductId, CustomerId, PricePurchased)
		SELECT p.Id, c.Id, p.Price
		FROM Company.Product AS p CROSS JOIN Company.Customer AS c 
		WHERE p.Name = 'iPhone' AND  c.FirstName = 'Tina' AND c.LastName = 'Smith';

-- Report all orders by Tina Smith
SELECT o.*
FROM Company.Orders AS o JOIN Company.Customer AS c ON o.CustomerId = c.Id
WHERE c.FirstName = 'Tina' AND c.LastName = 'Smith';

-- Report all Revenue Generated by sale of iPhone

SELECT SUM(PricePurchased) AS "Total Revenue For iPhone"
FROM Company.Orders AS o JOIN Company.Product AS p ON o.ProductId = p.Id
WHERE p.Name = 'iPhone'

-- Increase price of iPhone to $250

UPDATE Company.Product SET Price = 250.00 WHERE Name = 'iPhone'